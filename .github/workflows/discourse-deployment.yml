name: Discourse Deployment CI

on:
  push:
    paths:
      - 'templates/discourse/**'
      - '.github/workflows/discourse-deployment.yml'
    branches: [ "main" ]

  workflow_run:
    workflows: ["CENV Deployment CI", "SA Deployment CI", "SMTP Deployment CI", "PG Deployment CI", "Redis Deployment CI"]
    types:
      - completed
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get last SA data
        id: sa-data
        run: |
          output=$(az deployment group show -n ${{ vars.SA_DEPLOYMENT_NAME }} -g ${{ vars.SA_RESOURCE_GROUP }})
          storageAccountName=$(echo $output | jq -r '.properties.outputs.storageAccountName.value')
          storageAccountAccessKey=$(echo $output | jq -r '.properties.outputs.storageAccountAccessKey.value')
          echo "STORAGE_ACCOUNT_NAME=$storageAccountName" >> "$GITHUB_OUTPUT"
          echo "STORAGE_ACCOUNT_ACCESS_KEY=$storageAccountAccessKey" >> "$GITHUB_OUTPUT"

      - name: Get last CENV data
        id: cenv-data
        run: |
          output=$(az deployment group show -n ${{ vars.CENV_DEPLOYMENT_NAME }} -g ${{ vars.CENV_RESOURCE_GROUP }})
          containerAppEnvResourceName=$(echo $output | jq -r '.properties.outputs.containerAppEnvResourceName.value')
          containerAppEnvResourceId=$(echo $output | jq -r '.properties.outputs.containerAppEnvResourceId.value')
          echo "CONTAINER_ENV_RESOURCE_NAME=$containerAppEnvResourceName" >> "$GITHUB_OUTPUT"
          echo "CONTAINER_ENV_RESOURCE_ID=$containerAppEnvResourceId" >> "$GITHUB_OUTPUT"

      - name: Get last SMTP data
        id: smtp-data
        run: |
          output=$(az deployment group show -n ${{ vars.ECS_DEPLOYMENT_NAME }} -g ${{ vars.ECS_RESOURCE_GROUP }})
          smtpSenderEmailAddress=$(echo $output | jq -r '.properties.outputs.smtpSenderEmailAddress.value')
          smtpServer=$(echo $output | jq -r '.properties.outputs.smtpServer.value')
          smtpPort=$(echo $output | jq -r '.properties.outputs.smtpPort.value')
          smtpUsername=$(echo $output | jq -r '.properties.outputs.smtpUsername.value')
          smtpPassword=$(echo $output | jq -r '.properties.outputs.smtpPassword.value')
          echo "DS_SMTP_ADDRESS=$smtpServer" >> "$GITHUB_OUTPUT"
          echo "DS_SMTP_PORT=$smtpPort" >> "$GITHUB_OUTPUT"
          echo "DS_SMTP_USER=$smtpUsername" >> "$GITHUB_OUTPUT"
          echo "DS_SMTP_PASS=$smtpPassword" >> "$GITHUB_OUTPUT"
          echo "DS_SMTP_EMAIL=$smtpSenderEmailAddress" >> "$GITHUB_OUTPUT"

      - name: Get last PG data
        id: pg-data
        run: |
          output=$(az deployment group show -n ${{ vars.PG_DEPLOYMENT_NAME }} -g ${{ vars.PG_RESOURCE_GROUP }})
          username=$(echo $output | jq -r '.properties.outputs.username.value')
          userPassword=$(echo $output | jq -r '.properties.outputs.userPassword.value')
          dbName=$(echo $output | jq -r '.properties.outputs.dbName.value')
          dbHostname=$(echo $output | jq -r '.properties.outputs.dbHostname.value')
          echo "DS_DB_HOST=$dbHostname" >> "$GITHUB_OUTPUT"
          echo "DS_DB_NAME=$dbName" >> "$GITHUB_OUTPUT"
          echo "DS_DB_USER=$username" >> "$GITHUB_OUTPUT"
          echo "DS_DB_PASS=$userPassword" >> "$GITHUB_OUTPUT"

      - name: Get last REDIS data
        id: redis-data
        run: |
          output=$(az deployment group show -n ${{ vars.REDIS_DEPLOYMENT_NAME }} -g ${{ vars.REDIS_RESOURCE_GROUP }})
          redisHost=$(echo $output | jq -r '.properties.outputs.redisHost.value')
          echo "DS_REDIS_HOST=$redisHost" >> "$GITHUB_OUTPUT"

      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Deploy Discourse Resources
        uses: Azure/cli@v2.0.0
        env:
          STORAGE_ACCOUNT_NAME: ${{ steps.sa-data.outputs.STORAGE_ACCOUNT_NAME }}
          STORAGE_ACCOUNT_ACCESS_KEY: ${{ steps.sa-data.outputs.STORAGE_ACCOUNT_ACCESS_KEY }}
          CONTAINER_ENV_RESOURCE_NAME: ${{ steps.cenv-data.outputs.CONTAINER_ENV_RESOURCE_NAME }}
          CONTAINER_ENV_RESOURCE_ID: ${{ steps.cenv-data.outputs.CONTAINER_ENV_RESOURCE_ID }}
          DS_SMTP_ADDRESS: ${{ steps.smtp-data.outputs.DS_SMTP_ADDRESS }}
          DS_SMTP_PORT: ${{ steps.smtp-data.outputs.DS_SMTP_PORT }}
          DS_SMTP_USER: ${{ steps.smtp-data.outputs.DS_SMTP_USER }}
          DS_SMTP_PASS: ${{ steps.smtp-data.outputs.DS_SMTP_PASS }}
          DS_SMTP_EMAIL: ${{ steps.smtp-data.outputs.DS_SMTP_EMAIL }}
          DS_DB_HOST: ${{ steps.pg-data.outputs.DS_DB_HOST }}
          DS_DB_NAME: ${{ steps.pg-data.outputs.DS_DB_NAME }}
          DS_DB_USER: ${{ steps.pg-data.outputs.DS_DB_USER }}
          DS_DB_PASS: ${{ steps.pg-data.outputs.DS_DB_PASS }}
          DS_REDIS_HOST: ${{ steps.redis-data.outputs.DS_REDIS_HOST }}
        with:
          inlineScript: |
            az deployment group create \
              --name ${{ vars.DS_DEPLOYMENT_NAME }} \
              --resource-group ${{ vars.DS_RESOURCE_GROUP }} \
              --template-file ./templates/discourse/main.bicep \
              --parameters \
                appName='${{ vars.DS_NAME }}' \
                containerAppEnvResourceName=$CONTAINER_ENV_RESOURCE_NAME \
                containerAppEnvResourceId=$CONTAINER_ENV_RESOURCE_ID \
                storageAccountName=$STORAGE_ACCOUNT_NAME \
                storageAccountKey=$STORAGE_ACCOUNT_ACCESS_KEY \
                discourseDomainName='${{ secrets.DOMAIN_NAME }}' \
                discourseDeveloperEmail='${{ secrets.DS_ENV_DEV_EMAIL }}' \
                discourseSMTPAddress=$DS_SMTP_ADDRESS \
                discourseSMTPPort=$DS_SMTP_PORT \
                discourseSMTPUser=$DS_SMTP_USER \
                discourseSMTPPass=$DS_SMTP_PASS \
                discourseSMTPEmailDomain='${{ secrets.DOMAIN_NAME }}' \
                discourseSMTPEmail=$DS_SMTP_EMAIL \
                discourseDbHost=$DS_DB_HOST \
                discourseDbName=$DS_DB_NAME \
                discourseDbUser=$DS_DB_USER \
                discourseDbPass=$DS_DB_PASS \
                discourseRedisHost=$DS_REDIS_HOST \
